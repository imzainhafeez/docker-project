apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mongodbStatefulSet.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.mongodbStatefulSet.app }}
  serviceName: "{{ .Values.mongodbStatefulSet.serviceName }}"
  replicas: {{ .Values.mongodbStatefulSet.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongodbStatefulSet.app }}
        {{- if .Values.mongodbStatefulSet.labels }}
        {{- range $key, $value := .Values.mongodbStatefulSet.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
    spec:
      containers:
      - name: {{ .Values.mongodbContainer.name }}
        image: {{ .Values.mongodbContainer.image }}
        ports:
        - containerPort: {{ .Values.mongodbContainer.port }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodbAdminUsername.secretName }}
              key: {{ .Values.mongodbAdminUsername.key }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodbAdminPassword.secretName }}
              key: {{ .Values.mongodbAdminPassword.key }}
        volumeMounts:
        - name: mongo-storage
          mountPath: {{ .Values.mongodbVolumeClaim.mountPath }}
        {{- if .Values.mongodbContainer.additionalEnv }}
        {{- range .Values.mongodbContainer.additionalEnv }}
        - name: {{ .name }}
          value: {{ .value }}
        {{- end }}
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: mongo-storage
    spec:
      accessModes: [ "{{ .Values.mongodbVolumeClaim.accessMode }}" ]
      resources:
        requests:
          storage: {{ .Values.mongodbVolumeClaim.storage }}
